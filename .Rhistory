panel.border = element_blank(),
legend.position = "none")
# Plotly interaktiivne graafik
politsei_teated_beesworm <- ggplotly(p, tooltip = c("text"))
# salvesta graafik, et see iframe abil blogisse lisada
saveWidget(as.widget(politsei_teated_beesworm), file="politsei_teated.html",
selfcontained = TRUE)
# gif graafikus värvid öötunnid tumedad ja päeval heledad
fill <- data_frame(c(1:13, 12:2), c(1:24))
names(fill) <- c("fill", "tund")
# gif graafik teadete arvuga kokku tundide lõikes
animeeritud_graafik <- postituste_arv %>%
# pealkirjas kasutatav kellaaeg
mutate(tund_frame = str_c(ifelse(tund < 10, "0", ""),
tund, ".00 - ",
ifelse((tund + 1) == 25, "01",
ifelse((tund + 1) < 10, str_c("0", tund + 1),
tund + 1)),
".00", sep = ""),
tund_am_pm = ifelse(am_pm == "PM", tund - 12, tund)) %>%
group_by(tund, tund_am_pm, tund_frame, am_pm) %>%
summarise(n = sum(n)) %>%
ungroup() %>%
left_join(fill) %>%
ggplot(aes(x = factor(tund_am_pm), y = n, group = am_pm, fill = fill,
frame = tund_frame)) +
geom_bar(aes(cumulative = TRUE), stat = "identity", position = "dodge") +
coord_polar(theta = "x", start = 0.26) +
xlab("") +
ylab("") +
scale_fill_viridis() +
labs(title = "Teated kell") +
theme(axis.ticks = element_blank(),
axis.text.y = element_blank(),
panel.background = element_blank(),
panel.grid.major.x = element_line(colour = "grey", lineend = 5),
axis.text.x = element_text(size = 15, hjust = 300),
legend.title = element_blank(),
legend.position = "none")
# salvesta graafik GIF-na
gg_animate(animeeritud_graafik, filename = "output/koned.gif", interval = .5)
library(dplyr)
library(stringr)
library(lubridate)
library(ggplot2)
library(gganimate)
library(viridis)
library(splitstackshape)
library(gridExtra)
library(tidyr)
library(ggbeeswarm)
library(plotly)
library(ggthemes)
library(extrafont)
library(htmlwidgets)
# 01_lae_andmed.R scripti tulemuse laadimine
load("C:/Users/toomase/Dropbox/DataScience/R/politsei_koned/data/politsei_postitused.Rdata")
# Töötle teadete andmeid
politsei_postitused <- politsei_postitused_raw %>%
tbl_df() %>%
select(-from_id, -from_name, -link) %>%
# ainult teated facebooki feed-st
filter(type == "status") %>%
mutate(tunnus = str_extract(message, "^[^:]+"),  # teatest tunnus
# teate esitamise aeg
aeg = str_replace_all(created_time, "T|\\+0000", ""),
aeg = parse_date_time(aeg, "ymdHMS"),
aeg = aeg + hours(1),
tund = hour(aeg),
tund = ifelse(tund == 0, 24, tund),
# suuremate tunnuste grupeerimine
tunnus_toodeldud = ifelse(str_detect(tunnus, "LIIKLUS"), "LIIKLUS",
tunnus),
tunnus_toodeldud = ifelse(str_detect(tunnus_toodeldud, "JOOBES"),
"JOOBES INIMENE", tunnus_toodeldud),
tunnus_toodeldud = ifelse(str_detect(tunnus_toodeldud, "VÄGIVALD"),
"VÄGIVALD", tunnus_toodeldud),
tunnus_toodeldud = ifelse(tunnus_toodeldud %in% c("AVALIK KORD", "LÄRM",
"LÕHKUMINE"), "AVALIK KORD",
tunnus_toodeldud),
tunnus_toodeldud = ifelse(!tunnus_toodeldud %in% c("VARGUS", "INFO", "LIIKLUS",
"JOOBES INIMENE", "VÄGIVALD",
"AVALIK KORD"), "MUU",
tunnus_toodeldud),
tunnus = tunnus_toodeldud)
# Kõik tunnid ja tunnused tabelisse
vorm <- expand.grid(unique(politsei_postitused$tund), unique(politsei_postitused$tunnus))
names(vorm) <- c("tund", "tunnus")
# postituste arv tunnuste ja tundide lõikes
postituste_arv <- politsei_postitused %>%
group_by(tund, tunnus) %>%
tally() %>%
ungroup() %>%
right_join(vorm) %>%
mutate(n = ifelse(is.na(n), 0, n),
am_pm = ifelse(tund > 12, "PM", "AM"))
# fuktsioon AM kella graafiku tegemiseks
am <- function(x){
postituste_arv %>%
filter(am_pm == "AM", tunnus == x) %>%
ggplot(aes(x = factor(tund), y = n, group = am_pm)) +
geom_bar(stat = "identity", position = "dodge", fill = "#460E5B") +
# ümmargune graafik
coord_polar(theta = "x", start = 0.26) +
xlab("") +
ylab("") +
# y-telja max AM ja PM graafikul samaks
ylim(0, postituste_arv %>%
filter(tunnus == x) %>%
summarise(maksimum = max(n)) %>%
.$maksimum) +
labs(subtitle = "AM - kell 00:00 - 12:00") +
theme(axis.ticks = element_blank(),
axis.text.y = element_blank(),
panel.background = element_blank(),
panel.grid.major.x = element_line(colour = "grey", lineend = 5),
axis.text.x = element_text(size = 15, hjust = 300),
legend.title = element_blank(),
legend.position = "none")
}
# fuktsioon PM kella graafiku tegemiseks
pm <- function(x){
postituste_arv %>%
filter(am_pm == "PM", tunnus == x) %>%
ggplot(aes(x = factor(tund), y = n, group = am_pm)) +
geom_bar(stat = "identity", position = "dodge", fill = "#F2E51D") +
coord_polar(theta = "x", start = 0.26) +
xlab("") +
ylab("") +
ylim(0, postituste_arv %>%
filter(tunnus == x) %>%
summarise(maksimum = max(n)) %>%
.$maksimum) +
scale_fill_viridis() +
labs(subtitle = "PM - kell 12:00 - 00:00") +
theme(axis.ticks = element_blank(),
axis.text.y = element_blank(),
panel.background = element_blank(),
panel.grid.major.x = element_line(colour = "grey", lineend = 5),
axis.text.x = element_text(size = 15, hjust = 300),
legend.title = element_blank(),
legend.position = "none")
}
# AM ja PM graafikud kõrvuti
grid.arrange(am(x = "LIIKLUS"), pm(x = "LIIKLUS"), ncol = 2,
top = "Liiklusega seotud teated")
?grid.arrange
library(grid)
# AM ja PM graafikud kõrvuti
grid.arrange(am(x = "LIIKLUS"), pm(x = "LIIKLUS"), ncol = 2,
# top = "Liiklusega seotud teated",
top = textGrob("Liiklusega seotud teated", gp=gpar(fontsize=15,font=8))))
# AM ja PM graafikud kõrvuti
grid.arrange(am(x = "LIIKLUS"), pm(x = "LIIKLUS"), ncol = 2,
# top = "Liiklusega seotud teated",
top = textGrob("Liiklusega seotud teated", gp=gpar(fontsize=15,font=8)))
# AM ja PM graafikud kõrvuti
grid.arrange(am(x = "LIIKLUS"), pm(x = "LIIKLUS"), ncol = 2,
# top = "Liiklusega seotud teated",
top = textGrob("Liiklusega seotud teated", gp=gpar(fontsize=15)))
# AM ja PM graafikud kõrvuti
grid.arrange(am(x = "LIIKLUS"), pm(x = "LIIKLUS"), ncol = 2,
# top = "Liiklusega seotud teated",
top = textGrob("Liiklusega seotud teated", gp=gpar(fontsize=17)))
postituste_arv %>%
group_by(tunnus) %>%
summarise(sum(n))
# AM ja PM graafikud kõrvuti
grid.arrange(am(x = "JOOBES INIMENE"), pm(x = "JOOBES INIMENE"), ncol = 2,
top = textGrob("Joobes inimestega seotud teated", gp = gpar(fontsize = 17)))
library(dplyr)
library(stringr)
library(lubridate)
library(ggplot2)
library(gganimate)
library(viridis)
library(splitstackshape)
library(gridExtra)
library(tidyr)
library(ggbeeswarm)
library(plotly)
library(ggthemes)
library(extrafont)
library(htmlwidgets)
library(grid)
# 01_lae_andmed.R scripti tulemuse laadimine
load("C:/Users/toomase/Dropbox/DataScience/R/politsei_koned/data/politsei_postitused.Rdata")
# Töötle teadete andmeid
politsei_postitused <- politsei_postitused_raw %>%
tbl_df() %>%
select(-from_id, -from_name, -link) %>%
# ainult teated facebooki feed-st
filter(type == "status") %>%
mutate(tunnus = str_extract(message, "^[^:]+"),  # teatest tunnus
tund = hour(aeg),
tund = ifelse(tund == 0, 24, tund),
aasta = year(aeg),
#suuremate tunnuste grupeerimine
tunnus_toodeldud = ifelse(str_detect(tunnus, "LIIKLUS"), "LIIKLUS",
tunnus),
tunnus_toodeldud = ifelse(str_detect(tunnus_toodeldud, "JOOBES"),
"JOOBES INIMENE", tunnus_toodeldud),
tunnus_toodeldud = ifelse(str_detect(tunnus_toodeldud, "VÄGIVALD"),
"VÄGIVALD", tunnus_toodeldud),
tunnus_toodeldud = ifelse(tunnus_toodeldud %in% c("AVALIK KORD", "LÄRM",
"LÕHKUMINE"), "AVALIK KORD",
tunnus_toodeldud),
tunnus_toodeldud = ifelse(!tunnus_toodeldud %in% c("VARGUS", "INFO", "LIIKLUS",
"JOOBES INIMENE", "VÄGIVALD",
"AVALIK KORD"), "MUU",
tunnus_toodeldud),
tunnus = tunnus_toodeldud)
# Kõik tunnid ja tunnused tabelisse
vorm <- expand.grid(unique(politsei_postitused$tund), unique(politsei_postitused$tunnus))
names(vorm) <- c("tund", "tunnus")
# postituste arv tunnuste ja tundide lõikes
postituste_arv <- politsei_postitused %>%
filter(aasta == 2016) %>%
group_by(tund, tunnus) %>%
tally() %>%
ungroup() %>%
right_join(vorm) %>%
mutate(n = ifelse(is.na(n), 0, n),
am_pm = ifelse(tund > 12, "PM", "AM"))
# fuktsioon AM kella graafiku tegemiseks
am <- function(x){
postituste_arv %>%
filter(am_pm == "AM", tunnus == x) %>%
ggplot(aes(x = factor(tund), y = n, group = am_pm)) +
geom_bar(stat = "identity", position = "dodge", fill = "#460E5B") +
# ümmargune graafik
coord_polar(theta = "x", start = 0.26) +
xlab("") +
ylab("") +
# y-telja max AM ja PM graafikul samaks
ylim(0, postituste_arv %>%
filter(tunnus == x) %>%
summarise(maksimum = max(n)) %>%
.$maksimum) +
labs(subtitle = "AM - kell 00:00 - 12:00") +
theme(axis.ticks = element_blank(),
axis.text.y = element_blank(),
panel.background = element_blank(),
panel.grid.major.x = element_line(colour = "grey", lineend = 5),
axis.text.x = element_text(size = 15, hjust = 300),
legend.title = element_blank(),
legend.position = "none")
}
# fuktsioon PM kella graafiku tegemiseks
pm <- function(x){
postituste_arv %>%
filter(am_pm == "PM", tunnus == x) %>%
ggplot(aes(x = factor(tund), y = n, group = am_pm)) +
geom_bar(stat = "identity", position = "dodge", fill = "#F2E51D") +
coord_polar(theta = "x", start = 0.26) +
xlab("") +
ylab("") +
ylim(0, postituste_arv %>%
filter(tunnus == x) %>%
summarise(maksimum = max(n)) %>%
.$maksimum) +
scale_fill_viridis() +
labs(subtitle = "PM - kell 12:00 - 00:00") +
theme(axis.ticks = element_blank(),
axis.text.y = element_blank(),
panel.background = element_blank(),
panel.grid.major.x = element_line(colour = "grey", lineend = 5),
axis.text.x = element_text(size = 15, hjust = 300),
legend.title = element_blank(),
legend.position = "none")
}
# AM ja PM graafikud kõrvuti
grid.arrange(am(x = "LIIKLUS"), pm(x = "LIIKLUS"), ncol = 2,
top = textGrob("Liiklusega seotud teated", gp = gpar(fontsize = 17)))
# Piltide asukoht
knitr::opts_chunk$set(fig.path='{{ site.url }}/img/politsei-teated-')
# graafikute ja koodi seaded
# library(svglite)  # vajalik svg formaadis piltide salvestamiseks
knitr::opts_chunk$set(
echo = FALSE,
message = FALSE,
# dev = "svglite",
dpi = 300,
warning = FALSE,
fig.cap = ""
)
library(dplyr)
library(stringr)
library(lubridate)
library(ggplot2)
library(gganimate)
library(viridis)
library(splitstackshape)
library(gridExtra)
library(tidyr)
library(ggbeeswarm)
library(plotly)
library(ggthemes)
library(extrafont)
library(htmlwidgets)
library(grid)
# 01_lae_andmed.R scripti tulemuse laadimine
load("C:/Users/toomase/Dropbox/DataScience/R/politsei_koned/data/politsei_postitused.Rdata")
# Töötle teadete andmeid
politsei_postitused <- politsei_postitused_raw %>%
tbl_df() %>%
select(-from_id, -from_name, -link) %>%
# ainult teated facebooki feed-st
filter(type == "status") %>%
mutate(tunnus = str_extract(message, "^[^:]+"),  # teatest tunnus
tund = hour(aeg),
tund = ifelse(tund == 0, 24, tund),
aasta = year(aeg),
#suuremate tunnuste grupeerimine
tunnus_toodeldud = ifelse(str_detect(tunnus, "LIIKLUS"), "LIIKLUS",
tunnus),
tunnus_toodeldud = ifelse(str_detect(tunnus_toodeldud, "JOOBES"),
"JOOBES INIMENE", tunnus_toodeldud),
tunnus_toodeldud = ifelse(str_detect(tunnus_toodeldud, "VÄGIVALD"),
"VÄGIVALD", tunnus_toodeldud),
tunnus_toodeldud = ifelse(tunnus_toodeldud %in% c("AVALIK KORD", "LÄRM",
"LÕHKUMINE"), "AVALIK KORD",
tunnus_toodeldud),
tunnus_toodeldud = ifelse(!tunnus_toodeldud %in% c("VARGUS", "INFO", "LIIKLUS",
"JOOBES INIMENE", "VÄGIVALD",
"AVALIK KORD"), "MUU",
tunnus_toodeldud),
tunnus = tunnus_toodeldud)
# Kõik tunnid ja tunnused tabelisse
vorm <- expand.grid(unique(politsei_postitused$tund), unique(politsei_postitused$tunnus))
names(vorm) <- c("tund", "tunnus")
# postituste arv tunnuste ja tundide lõikes
postituste_arv <- politsei_postitused %>%
filter(aasta == 2016) %>%
group_by(tund, tunnus) %>%
tally() %>%
ungroup() %>%
right_join(vorm) %>%
mutate(n = ifelse(is.na(n), 0, n),
am_pm = ifelse(tund > 12, "PM", "AM"))
# fuktsioon AM kella graafiku tegemiseks
am <- function(x){
postituste_arv %>%
filter(am_pm == "AM", tunnus == x) %>%
ggplot(aes(x = factor(tund), y = n, group = am_pm)) +
geom_bar(stat = "identity", position = "dodge", fill = "#460E5B") +
# ümmargune graafik
coord_polar(theta = "x", start = 0.26) +
xlab("") +
ylab("") +
# y-telja max AM ja PM graafikul samaks
ylim(0, postituste_arv %>%
filter(tunnus == x) %>%
summarise(maksimum = max(n)) %>%
.$maksimum) +
labs(subtitle = "AM - kell 00:00 - 12:00") +
theme(axis.ticks = element_blank(),
axis.text.y = element_blank(),
panel.background = element_blank(),
panel.grid.major.x = element_line(colour = "grey", lineend = 5),
axis.text.x = element_text(size = 15, hjust = 300),
legend.title = element_blank(),
legend.position = "none")
}
# fuktsioon PM kella graafiku tegemiseks
pm <- function(x){
postituste_arv %>%
filter(am_pm == "PM", tunnus == x) %>%
ggplot(aes(x = factor(tund), y = n, group = am_pm)) +
geom_bar(stat = "identity", position = "dodge", fill = "#F2E51D") +
coord_polar(theta = "x", start = 0.26) +
xlab("") +
ylab("") +
ylim(0, postituste_arv %>%
filter(tunnus == x) %>%
summarise(maksimum = max(n)) %>%
.$maksimum) +
scale_fill_viridis() +
labs(subtitle = "PM - kell 12:00 - 00:00") +
theme(axis.ticks = element_blank(),
axis.text.y = element_blank(),
panel.background = element_blank(),
panel.grid.major.x = element_line(colour = "grey", lineend = 5),
axis.text.x = element_text(size = 15, hjust = 300),
legend.title = element_blank(),
legend.position = "none")
}
# AM ja PM graafikud kõrvuti
grid.arrange(am(x = "LIIKLUS"), pm(x = "LIIKLUS"), ncol = 2,
top = textGrob("Liiklusega seotud teated", gp = gpar(fontsize = 17)))
# AM ja PM graafikud kõrvuti
grid.arrange(am(x = "JOOBES INIMENE"), pm(x = "JOOBES INIMENE"), ncol = 2,
top = textGrob("Joobes inimestega seotud teated", gp = gpar(fontsize = 17)))
# Piltide asukoht
knitr::opts_chunk$set(fig.path='{{ site.url }}/img/politsei-teated-')
# graafikute ja koodi seaded
# library(svglite)  # vajalik svg formaadis piltide salvestamiseks
knitr::opts_chunk$set(
echo = FALSE,
message = FALSE,
# dev = "svglite",
dpi = 300,
warning = FALSE,
fig.cap = ""
)
library(dplyr)
library(stringr)
library(lubridate)
library(ggplot2)
library(gganimate)
library(viridis)
library(splitstackshape)
library(gridExtra)
library(tidyr)
library(ggbeeswarm)
library(plotly)
library(ggthemes)
library(extrafont)
library(htmlwidgets)
library(grid)
# 01_lae_andmed.R scripti tulemuse laadimine
load("C:/Users/toomase/Dropbox/DataScience/R/politsei_koned/data/politsei_postitused.Rdata")
# Töötle teadete andmeid
politsei_postitused <- politsei_postitused_raw %>%
tbl_df() %>%
select(-from_id, -from_name, -link) %>%
# ainult teated facebooki feed-st
filter(type == "status") %>%
mutate(tunnus = str_extract(message, "^[^:]+"),  # teatest tunnus
tund = hour(aeg),
tund = ifelse(tund == 0, 24, tund),
aasta = year(aeg),
#suuremate tunnuste grupeerimine
tunnus_toodeldud = ifelse(str_detect(tunnus, "LIIKLUS"), "LIIKLUS",
tunnus),
tunnus_toodeldud = ifelse(str_detect(tunnus_toodeldud, "JOOBES"),
"JOOBES INIMENE", tunnus_toodeldud),
tunnus_toodeldud = ifelse(str_detect(tunnus_toodeldud, "VÄGIVALD"),
"VÄGIVALD", tunnus_toodeldud),
tunnus_toodeldud = ifelse(tunnus_toodeldud %in% c("AVALIK KORD", "LÄRM",
"LÕHKUMINE"), "AVALIK KORD",
tunnus_toodeldud),
tunnus_toodeldud = ifelse(!tunnus_toodeldud %in% c("VARGUS", "INFO", "LIIKLUS",
"JOOBES INIMENE", "VÄGIVALD",
"AVALIK KORD"), "MUU",
tunnus_toodeldud),
tunnus = tunnus_toodeldud)
# Kõik tunnid ja tunnused tabelisse
vorm <- expand.grid(unique(politsei_postitused$tund), unique(politsei_postitused$tunnus))
names(vorm) <- c("tund", "tunnus")
# postituste arv tunnuste ja tundide lõikes
postituste_arv <- politsei_postitused %>%
filter(aasta == 2016) %>%
group_by(tund, tunnus) %>%
tally() %>%
ungroup() %>%
right_join(vorm) %>%
mutate(n = ifelse(is.na(n), 0, n),
am_pm = ifelse(tund > 12, "PM", "AM"))
# fuktsioon AM kella graafiku tegemiseks
am <- function(x){
postituste_arv %>%
filter(am_pm == "AM", tunnus == x) %>%
ggplot(aes(x = factor(tund), y = n, group = am_pm)) +
geom_bar(stat = "identity", position = "dodge", fill = "#460E5B") +
# ümmargune graafik
coord_polar(theta = "x", start = 0.26) +
xlab("") +
ylab("") +
# y-telja max AM ja PM graafikul samaks
ylim(0, postituste_arv %>%
filter(tunnus == x) %>%
summarise(maksimum = max(n)) %>%
.$maksimum) +
labs(subtitle = "AM - kell 00:00 - 12:00") +
theme(axis.ticks = element_blank(),
axis.text.y = element_blank(),
panel.background = element_blank(),
panel.grid.major.x = element_line(colour = "grey", lineend = 5),
axis.text.x = element_text(size = 15, hjust = 300),
legend.title = element_blank(),
legend.position = "none")
}
# fuktsioon PM kella graafiku tegemiseks
pm <- function(x){
postituste_arv %>%
filter(am_pm == "PM", tunnus == x) %>%
ggplot(aes(x = factor(tund), y = n, group = am_pm)) +
geom_bar(stat = "identity", position = "dodge", fill = "#F2E51D") +
coord_polar(theta = "x", start = 0.26) +
xlab("") +
ylab("") +
ylim(0, postituste_arv %>%
filter(tunnus == x) %>%
summarise(maksimum = max(n)) %>%
.$maksimum) +
scale_fill_viridis() +
labs(subtitle = "PM - kell 12:00 - 00:00") +
theme(axis.ticks = element_blank(),
axis.text.y = element_blank(),
panel.background = element_blank(),
panel.grid.major.x = element_line(colour = "grey", lineend = 5),
axis.text.x = element_text(size = 15, hjust = 300),
legend.title = element_blank(),
legend.position = "none")
}
# AM ja PM graafikud kõrvuti
grid.arrange(am(x = "LIIKLUS"), pm(x = "LIIKLUS"), ncol = 2,
top = textGrob("Liiklusega seotud teated", gp = gpar(fontsize = 17)))
# AM ja PM graafikud kõrvuti
grid.arrange(am(x = "JOOBES INIMENE"), pm(x = "JOOBES INIMENE"), ncol = 2,
top = textGrob("Joobes inimestega seotud teated", gp = gpar(fontsize = 17)))
